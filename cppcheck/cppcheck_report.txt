Checking ../2048/src/Game.cpp ...

../2048/src/Game.cpp:7:7: warning: Member variable 'Game::m_key' is not initialized in the constructor. [uninitMemberVar]
Game::Game()
      ^
../2048/app/Game.hpp:18:10: performance: inconclusive: Technically the member function 'Game::drawHBarrier' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    void drawHBarrier(int zeroSpaceLen);
         ^
../2048/src/Game.cpp:41:12: note: Technically the member function 'Game::drawHBarrier' can be static (but you may consider moving to unnamed namespace).
void Game::drawHBarrier(int zeroSpaceLen)
           ^
../2048/app/Game.hpp:18:10: note: Technically the member function 'Game::drawHBarrier' can be static (but you may consider moving to unnamed namespace).
    void drawHBarrier(int zeroSpaceLen);
         ^
../2048/app/Game.hpp:20:10: style: inconclusive: Technically the member function 'Game::update' can be const. [functionConst]
    void update();
         ^
../2048/src/Game.cpp:125:12: note: Technically the member function 'Game::update' can be const.
void Game::update()
           ^
../2048/app/Game.hpp:20:10: note: Technically the member function 'Game::update' can be const.
    void update();
         ^
../2048/app/Game.hpp:21:10: performance: inconclusive: Technically the member function 'Game::fillRandPos' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    void fillRandPos(GameBoard &gb);
         ^
../2048/src/Game.cpp:166:12: note: Technically the member function 'Game::fillRandPos' can be static (but you may consider moving to unnamed namespace).
void Game::fillRandPos(Game::GameBoard &gb)
           ^
../2048/app/Game.hpp:21:10: note: Technically the member function 'Game::fillRandPos' can be static (but you may consider moving to unnamed namespace).
    void fillRandPos(GameBoard &gb);
         ^
../2048/app/KeyPushManager.hpp:9:5: style: Class 'KeyPushManager' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    KeyPushManager(Game &game);
    ^
../2048/src/Game.cpp:206:41: performance: Function parameter 'gb' should be passed by const reference. [passedByValue]
void Game::setGameBoard(Game::GameBoard gb)
                                        ^
1/5 files checked 41% done

--------------------------------------------

Checking ../2048/src/Kbhit.cpp ...
2/5 files checked 51% done

--------------------------------------------

Checking ../2048/src/KeyPushManager.cpp ...
../2048/src/KeyPushManager.cpp:3:17: warning: Member variable 'KeyPushManager::m_key' is not initialized in the constructor. [uninitMemberVar]
KeyPushManager::KeyPushManager(Game &game) : game(game)
                ^
../2048/src/KeyPushManager.cpp:3:17: warning: Member variable 'KeyPushManager::m_isGameBoardMoved' is not initialized in the constructor. [uninitMemberVar]
KeyPushManager::KeyPushManager(Game &game) : game(game)
                ^
../2048/src/KeyPushManager.cpp:5:3: performance: Variable 'gb' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  gb = game.getGameBoard();
  ^
3/5 files checked 88% done

--------------------------------------------

Checking ../2048/src/Utils.cpp ...
4/5 files checked 90% done

--------------------------------------------
Checking ../2048/src/main.cpp ...
Checking ../2048/src/main.cpp: _WIN32...
Checking ../2048/src/main.cpp: __linux__...
5/5 files checked 100% done
../2048/src/Kbhit.cpp:22:0: style: The function 'kbhit' is never used. [unusedFunction]

^
nevena@nevena-VirtualBox:~/VS/cppcheck$

